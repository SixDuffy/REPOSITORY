C语言基础总结

程序是用来完成特定功能的一系列指令。
程序设计语言包括机器语言、汇编语言、高级语言和面向对象语言。
程序执行包括编译执行和解释执行。
C语言智能最新版本ANSI C99。
一个C程序至少有一个函数构成，而且必须包含一个名为main的主函数，语句末尾用分号隔开。
计算机有控制器、运算器、储存器、输入设备和输出设备。
计算机指令和数据均以二进制数形式表示和存放。
算法即解决一个问题所擦哎去的一系列步骤，程序=数据结构+算法。
算法特性：有穷性、确定性、输入、输出、可行性。
结构化程序设计：顺序结构、选择结构、当型循环结构（判断成立在执行）、直到型循环结构（执行一次在判断）。
数据类型分为基本数据类型（包括整型、实型、字符型、枚举类型）、构造类型（数组、结构体、共用体）、指针、、空类型（void）。
短整型（short int 2bit）基本整型(int 4bit)长整型(long int 4bit)单精度浮点型(float 4bit)双精度浮点型(double 8bie)长双精度浮点型(long double 8bit)字符型(char 1bit)。
标识符只能有第一个字符为非数字的字母、数字、下划线3中字符组成。
C语言保留字32个：数据类型（char，short,unsigned,long,float,double,struct,union,void,enum,
signed,const,volatile）、储存类别（typedef,auto,register,static,extern）、流程控制（break,case,continue,default,do,else,for,goto,if,return,switch,while）、运算符（sizeof）
常量分为字面常量（整型、实型、字符型/*必须用一对单撇号将字符括起来）、符号常量（#define 标识符/*大写字母 常量）和const常量（const 类型标识符 变量标识符=初始化数据/*必须初始化）
八进制家前缀0，十六进制家前缀0X
/****************************************/
//整形数据的输入输出格式
/*"*"输入抑制符，按格式读入但不赋值给变量
d十进制整数o八进制整数x十六进制整数f浮点型实数e指数型实数c字符型数据*/
/*长整型有%ld、%lo、%lx、%lu，短整型有%hd、%ho、%hx、%hu实型数据有%lf*/
/*m指域宽，若数据的列宽大于m则忽略m，n指精度，默认为6*/
/****************************************/

#include<stdio.h>
void main()
{
  int a=-10;short b=+222;long c=-3;
  int hd,d,ld;int n=123;
  printf("Please Input d=10位数：\n");
  scanf("%3d%3d%3d",&hd,&d,&ld);
  printf("/**********/\n");
  printf("%10hd,%10d,%10ld\n",hd,d,ld);
  printf("a=%-10d,b=%-10d,c=%-10d\n",a,b,c);    /*定义为int型，用输出格式%d;输出域宽10列，左对齐*/
  printf("a=%10d,b=%10hd,c=%10ld\n",a,b,c);     /*输出域宽10列，右对齐*/
  printf("a=%010d,b=%010hd,c=%010ld\n",a,b,c);  /* 输出域宽10列，空白用0补*/
  printf("a=%2d,b=%2hd,c=%2ld\n",a,b,c);        /* 数据域宽大于2，忽略域宽*/
  printf("n=%10d,n=%10o,n=%10x\n",n,n,n);       /*%d无符号正常输出十进制八进制十六进制*/
  printf("a=%10d,a=%10o,a=%10x\n",a,a,a);       /*%d有符号正常输出十进制，八进制十六进制出错*/
  printf("/**********/\n");
}

/********************结束********************/
整数是将该数补码储存在储存单元，正数原码补码反码相同，负数补码是将该数绝对值原码取反加一。
默认情况实型常量为double,单精度浮点型常量家后缀f，长双精度浮点型家后缀l，顶点格式直接用小数点分开，指数格式用E隔开，例如：12345.6789=1.23456789E4
/****************************************/
//实型数据的输入输出格式
/*%f顶点格式输入单精度，输出单双精度，默认小数点后6位，不够补0%lf顶点格式输入输出双精度；%g顶点格式输出去掉小数点后的0；%e指数输出*/
/*%10.1f，输出域宽10、右对齐、不足左边补空，小数点后一位，多余四舍五入*/
/****************************************/

#include<stdio.h>
void main()
{
  float a=-10.123456789,b=10.12;double c=10123.456789;long double d=10.1122000000;
  float e;double f;
  printf("Please Input f=10.987654321：\n");
  scanf("f=%lf",&f);
  e=f;
  printf("/**********/\n");
  printf("%15f,%15f,%15lf\n",e,f,f);
  printf("a=%15f,a=%15.2f,c=%15lf\n",a,a,c);        /*“%f”和“%lf”格式在输出时默认小数点后六位*/
  printf("c=%e\n",c);                               /*指数输出*/
  printf("b=%15f,b=%15o,b=%15x\n",b,b,b);           /*十进制八进制十六进制*/
  printf("d=%lf,d=%g\n",d,d);                       /*去掉小数点后无效的0*/
  printf("/**********/\n");
}

/********************结束********************/
实数分为小数部分和指数部分分别储存在计算机中，用二进制表示小数部分，用2的幂次来表示指数部分。
/****************************************/
//字符型数据的输入输出格式
/*getchar()函数可以读入空格、Tab和回车键这三个字符，getchar()和putchar()函数格式说明符必须是“%c”,也可以用scanf()和printf()函数输入输出字符型数据*/
/*%10.1f，输出域宽10、右对齐、不足左边补空，小数点后一位，多余四舍五入*/
/****************************************/

#include<stdio.h>
void main()
{
  char a,b;
  printf("Please Input 两个字符：\n")；
  a=getchar();
  scanf("%c",&b);
  printf("/**********/\n");
  putchar(a);
  printf("\n");
  printf("%c %d %o %x",b,b,b,b):
  printf("/**********/\n");
}

/********************结束********************/
在“\”后加一个字符表示转义字符（代表一个字符）
“\n”换行，“\t”横向跳格“\v”，竖向跳格，“\b”退格，“\r”回车，“\f”走纸换页，“\\”反斜杠字符，“\'”单引号，“\ddd”1到3为八进制数代表的字符，如‘\141’代表‘a’,“\xhh”1到 3位十六进制代表的字符，如‘\x61’表示字符‘a’，字符串“Please Input what!”
/****************************************/
//算术运算符和算数表达式
/*C语言中的运算符：算术运算符“+ - * / % ++ --”，关系运算符“> < == >= <= !=”，赋值运算符“=”，位运算符“<< >> ~ | ^ &”，逻辑运算符“！ && ||”，条件运算符“？ ：”，逗号运算符“，”，指针运算符“* &”，求字节运算符“sizeof”，强制类型转换运算符“（类型）”，分量运算符“. ->”，下标运算符“[]”，其他“如函数调用运算符（）”。
“S+5-C”是从左到右运算，“a=b=3”是从右往左运算。
“5/9=0”，“5%9=4”。
赋值表达式将右边的值转换为左边变量类型，实数转换为整数是截取整数部分，整数转换为实数小数点后补0，复合赋值表达式左边必须是变量，复合赋值符“+= -= *= /= %= <<= >>= &= ^= |=”。
逗号表达式从右向左求表达式的值，整个逗号表达式的值为最右边的表达式的值，逗号表达式运算级别最低。*/
/****************************************/

#include<stdio.h>
void main()
{
   int a=3,b;
   float c=5.876,d;
   int x,y;
   int i=6,j=6;
   printf("i=%-5d,j=%-5d\n",i,j);
   printf("/**********/\n"); 
   printf("i++=%-5d,++j=%-5d\n",i++,++j);    /*i加1，i++不变；j和++j都加1*/
   printf("i=%-7d,j=%-7d\n",i,j);
   printf("/**********/\n");
   printf("\n");                             /*i=7，j=7运行下面计算*/
   printf("/**********/\n"); 
   printf("i--=%-5d,--j=%-5d\n",i--,--j);    /*i减1，i++不变；j和++j都减1*/
   printf("i=%-7d,j=%-7d\n",i,j);
   printf("/**********/\n");
   d=a;
   b=c;
   printf("a=%6d，d=%6f\n",a,d);             /*整数转换为实数小数点后补0*/
   printf("b=%6d,c=%6f\n",b,c);              /*实数转换为整数是截取整数部分*/
   printf("/**********/\n");
   x=(a+b,a-b,b+d,b+c,a-d);                  /*整个逗号表达式的值为最右边的表达式的值*/
   y=a-b,b+c;                                /*逗号表达式运算级别最低*/
   printf("x=%6d,y=%6d\n",x,y);
   printf("/**********/\n");
}

/********************结束********************/
